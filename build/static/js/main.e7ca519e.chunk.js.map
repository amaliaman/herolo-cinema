{"version":3,"sources":["images/loader.svg","constants/Strings.js","reducers/index.js","constants/ActionTypes.js","utils/AjaxUtils.js","utils/TransportLayer.js","actions/index.js","components/Movie.js","components/AlertMessage.js","components/Movies.js","components/Loader.js","components/DeleteConfirmation.js","containers/DeleteConfirmContainer.js","containers/MoviesContainer.js","components/MovieForm.js","components/MovieFormWrapper.js","containers/MovieFormContainer.js","containers/Home.js","containers/App.js","index.js"],"names":["module","exports","__webpack_require__","p","FORM_MODES","ADD","EDIT","ALERT_NO_MOVIES","concat","COLORS","VALIDATION","initialState","movies","isFetching","items","selectedId","selectedTitle","form","isOpen","mode","deleteConfirmation","errorMessage","rootReducer","combineReducers","state","arguments","length","undefined","action","type","newMovie","Object","objectSpread","movie","id","uuidv4","toConsumableArray","filter","find","i","title","map","message","ajaxUtils","AjaxUtils","classCallCheck","this","queryApi","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","method","url","body","response","wrap","_context","prev","next","t0","axios","get","sent","abrupt","post","put","delete","Error","data","t1","stop","_x","_x2","_x3","apply","MOVIES_PATH","transportLayer","getMovies","titles","receiveMovies","showForm","dispatch","getState","resetError","showFormNoReset","toggleForm","toggleDeleteConfirm","showError","Movie","handleEditClick","_this$props","_this","props","selectForEdit","strings","_this2","_this$props$movie","year","runtime","genre","director","react_default","createElement","reactstrap_es","href","onClick","Component","AlertMessage","color","className","Movies","m","components_Movie","key","components_AlertMessage","Loader","alt","src","loader","DeleteConfirmation","handleDelete","deleteMovie","toggle","outline","DeleteConfirmContainer","components_DeleteConfirmation","mapActions","connect","_state$movies","MoviesContainer","components_Loader","containers_DeleteConfirmContainer","components_Movies","MovieSchema","yup","shape","required","min","max","integer","MovieForm","movieToEdit","updateMovie","addMovie","buttonLabel","formik_esm","initialValues","validationSchema","onSubmit","values","_ref2","errors","touched","for","name","placeholder","MovieFormWrapper","submitAction","components_MovieForm","MovieFormContainer","components_MovieFormWrapper","findIndex","propsObj","Home","role","aria-label","containers_MoviesContainer","containers_MovieFormContainer","target","rel","App","containers_Home","middleware","thunk","store","createStore","reducer","applyMiddleware","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.e7ca519e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.546bb2e7.svg\";","export const APP_TITLE = 'Herolo Cinema';\r\n\r\nexport const FORM_MODES = {\r\n    ADD: 'ADD',\r\n    EDIT: 'EDIT'\r\n};\r\n\r\nexport const ADD_MOVIE_TITLE = 'Add Movie';\r\nexport const EDIT_MOVIE_TITLE = 'Edit Movie';\r\n\r\nexport const CANCEL_BUTTON = 'Cancel';\r\nexport const DELETE_BUTTON = 'Delete';\r\nexport const EDIT_BUTTON = 'Edit';\r\nexport const ADD_BUTTON = 'Add Movie';\r\nexport const SUBMIT_ADD_BUTTON = 'Submit';\r\nexport const SUBMIT_UPDATE_BUTTON = 'Update';\r\n\r\nexport const DELETE_CONFIRMATION_BODY = 'Are you sure you want to delete this movie?';\r\n\r\nexport const FORM_LABEL_TITLE = 'Title';\r\nexport const FORM_LABEL_YEAR = 'Year';\r\nexport const FORM_LABEL_DIRECTOR = 'Director';\r\nexport const FORM_LABEL_GENRE = 'Genre';\r\nexport const FORM_LABEL_RUNTIME = 'Runtime';\r\n\r\nexport const ALERT_NO_MOVIES = `There are no movies here. Start by clicking the '${ADD_BUTTON}' button!`;\r\n\r\nexport const COLORS = {\r\n    PRIMARY: 'primary',\r\n    SECONDARY: 'secondary',\r\n    SUCCESS: 'success',\r\n    INFO: 'info',\r\n    WARNING: 'warning',\r\n    DANGER: 'danger'\r\n};\r\n\r\nexport const VALIDATION = {\r\n    REQUIRED: 'Required',\r\n    YEAR: 'Please enter a valid year'\r\n};\r\n\r\nexport const UNIQUE_TITLE_ERROR = 'Title already exists';","import { combineReducers } from 'redux';\r\nimport uuidv4 from 'uuid/v4';\r\n\r\nimport * as types from '../constants/ActionTypes';\r\nimport { FORM_MODES } from '../constants/Strings';\r\n\r\nconst initialState = {\r\n    movies: {\r\n        isFetching: false,\r\n        items: [],\r\n        selectedId: '',\r\n        selectedTitle: ''\r\n    },\r\n    form: {\r\n        isOpen: false,\r\n        mode: FORM_MODES.ADD\r\n    },\r\n    deleteConfirmation: {\r\n        isOpen: false\r\n    },\r\n    errorMessage: ''\r\n};\r\n\r\nconst movies = (state = initialState.movies, action) => {\r\n    switch (action.type) {\r\n        case types.ADD_MOVIE:\r\n            const newMovie = {\r\n                ...action.movie,\r\n                id: uuidv4()\r\n            }\r\n            return {\r\n                ...state,\r\n                items: [...state.items, newMovie]\r\n            };\r\n        case types.DELETE_MOVIE:\r\n            return {\r\n                ...state,\r\n                selectedId: '',\r\n                selectedTitle: '',\r\n                items: state.items.filter(movie => movie.id !== action.id)\r\n            };\r\n        case types.SELECT_FOR_EDIT:\r\n            return {\r\n                ...state,\r\n                selectedId: action.id\r\n            };\r\n        case types.TOGGLE_DELETE_CONFIRM:\r\n            if (action.id) {\r\n                return {\r\n                    ...state,\r\n                    selectedId: action.id,\r\n                    selectedTitle: state.items.find(i => i.id === action.id).title\r\n                };\r\n            }\r\n            return state;\r\n        case types.UPDATE_MOVIE:\r\n            return {\r\n                ...state,\r\n                selectedId: '',\r\n                items: state.items.map(movie => {\r\n                    if (movie.id === action.id) {\r\n                        return {\r\n                            ...movie,\r\n                            ...action.movie\r\n                        }\r\n                    }\r\n                    else return movie;\r\n                })\r\n            };\r\n        case types.REQUEST_MOVIES:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            };\r\n        case types.RECEIVE_MOVIES:\r\n            return {\r\n                ...state,\r\n                items: action.movies,\r\n                isFetching: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst form = (state = initialState.form, action) => {\r\n    switch (action.type) {\r\n        case types.SHOW_FORM:\r\n            return {\r\n                ...state,\r\n                isOpen: true,\r\n                mode: action.mode,\r\n            };\r\n        case types.TOGGLE_FORM:\r\n            return {\r\n                ...state,\r\n                isOpen: !state.isOpen\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst deleteConfirmation = (state = initialState.deleteConfirmation, action) => {\r\n    switch (action.type) {\r\n        case types.TOGGLE_DELETE_CONFIRM:\r\n            return {\r\n                ...state,\r\n                isOpen: !state.isOpen\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst errorMessage = (state = initialState.errorMessage, action) => {\r\n    switch (action.type) {\r\n        case types.SHOW_ERROR:\r\n            return action.message;\r\n        case types.RESET_ERROR:\r\n            return initialState.errorMessage;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n    movies,\r\n    form,\r\n    deleteConfirmation,\r\n    errorMessage\r\n});\r\n\r\nexport default rootReducer;","// Movies\r\nexport const ADD_MOVIE = 'ADD_MOVIE';\r\nexport const DELETE_MOVIE = 'DELETE_MOVIE';\r\nexport const UPDATE_MOVIE = 'UPDATE_MOVIE';\r\nexport const SELECT_FOR_EDIT = 'SELECT_FOR_EDIT';\r\nexport const REQUEST_MOVIES = 'REQUEST_MOVIES';\r\nexport const RECEIVE_MOVIES = 'RECEIVE_MOVIES';\r\n\r\n// UI\r\nexport const SHOW_FORM = 'SHOW_FORM';\r\nexport const TOGGLE_FORM = 'TOGGLE_FORM';\r\nexport const TOGGLE_DELETE_CONFIRM = 'TOGGLE_DELETE_CONFIRM';\r\nexport const SHOW_ERROR = 'SHOW_ERROR';\r\nexport const RESET_ERROR = 'RESET_ERROR';","import axios from 'axios';\r\n\r\nclass AjaxUtils {\r\n    constructor() {\r\n        this.MOVIES_PATH = '/movies';\r\n    }\r\n\r\n    // Return a promise\r\n    queryApi = async (method, url, body) => {\r\n        let response;\r\n        try {\r\n            switch (method) {\r\n                case 'get':\r\n                    response = await axios.get(url);\r\n                    break;\r\n                case 'post':\r\n                    response = await axios.post(url, body);\r\n                    break;\r\n                case 'put':\r\n                    response = await axios.put(url, body);\r\n                    break;\r\n                case 'delete':\r\n                    response = await axios.delete(url);\r\n                    break;\r\n                default:\r\n                    throw new Error(`Unexpected method: ${method}`);\r\n            }\r\n            return response.data;\r\n        }\r\n        catch (error) { throw error; }\r\n    };\r\n}\r\n\r\nconst ajaxUtils = new AjaxUtils();\r\nexport default ajaxUtils;","import ajaxUtils from './AjaxUtils';\r\n\r\nclass TransportLayer {\r\n\r\n    /** Get movies */\r\n    getMovies = titles => {\r\n        const url = `${ajaxUtils.MOVIES_PATH}`;\r\n        return ajaxUtils.queryApi('post', url, { titles });\r\n    };\r\n}\r\n\r\nconst transportLayer = new TransportLayer();\r\nexport default transportLayer;","import * as types from '../constants/ActionTypes';\r\nimport titles from '../data/titles.json'\r\nimport transportLayer from '../utils/TransportLayer';\r\nimport * as strings from '../constants/Strings';\r\n\r\n/**\r\n * ADD_MOVIE action creator.\r\n * Create a new movie in the state.\r\n * @param {Object} movie - The movie to add.\r\n */\r\nconst addMovie = movie => ({\r\n    type: types.ADD_MOVIE,\r\n    movie\r\n});\r\n\r\nexport const addMovieUnique = movie => (dispatch, getState) => {\r\n    const { movies } = getState();\r\n    dispatch(resetError());\r\n    if (movies.items\r\n        .findIndex(m => m.title === movie.title) === -1) {\r\n        dispatch(addMovie(movie));\r\n        dispatch(toggleForm());\r\n    }\r\n    else {\r\n        dispatch(showError(`${strings.UNIQUE_TITLE_ERROR}: ${movie.title}`));\r\n    }\r\n};\r\n\r\n/**\r\n * DELETE_MOVIE action creator.\r\n * Delete a movie from the state.\r\n * @param {string} id - The id of the movie to delete.\r\n */\r\nexport const deleteMovie = id => ({\r\n    type: types.DELETE_MOVIE,\r\n    id\r\n});\r\n\r\n/**\r\n * UPDATE_MOVIE action creator.\r\n * Update a movie in the state.\r\n * @param {Object} movie - The movie movie to update.\r\n * @param {string} id - The id of the movie to update.\r\n */\r\nconst updateMovie = (movie, id) => ({\r\n    type: types.UPDATE_MOVIE,\r\n    movie,\r\n    id\r\n});\r\n\r\nexport const updateMovieUnique = (movie, id) => (dispatch, getState) => {\r\n    const { movies } = getState();\r\n    dispatch(resetError());\r\n    if (movies.items\r\n        .filter(m => m.id !== movies.selectedId)\r\n        .findIndex(m => m.title === movie.title) === -1) {\r\n        dispatch(updateMovie(movie, id));\r\n        dispatch(toggleForm());\r\n    }\r\n    else {\r\n        dispatch(showError(`${strings.UNIQUE_TITLE_ERROR}: ${movie.title}`));\r\n    }\r\n};\r\n\r\n/**\r\n * SELECT_FOR_EDIT action creator.\r\n * Select a movie for editing.\r\n * @param {string} id - The id of the movie selected for editing.\r\n */\r\nexport const selectForEdit = id => ({\r\n    type: types.SELECT_FOR_EDIT,\r\n    id\r\n});\r\n\r\n/**\r\n * REQUEST_MOVIES action creator.\r\n * Make ajax call to movies API to receive movie list.\r\n */\r\nexport const requestMovies = () => ({\r\n    type: types.REQUEST_MOVIES\r\n});\r\n\r\n/**\r\n * RECEIVE_MOVIES action creator.\r\n * Receive response from movies API and parse it.\r\n * @param {Array} movies - The response from the API.\r\n */\r\nexport const receiveMovies = movies => ({\r\n    type: types.RECEIVE_MOVIES,\r\n    movies\r\n});\r\n\r\n/**\r\n * Handle the actual API call and dispatch RECEIVE_MOVIES action.\r\n */\r\nexport const fetchMovies = () => async dispatch => {\r\n    dispatch(requestMovies());\r\n    const movies = await transportLayer.getMovies(titles);\r\n    return dispatch(receiveMovies(movies));\r\n};\r\n\r\n// UI related\r\n\r\n/**\r\n * SHOW_FORM action creator.\r\n * @param {string} mode - The mode of the form (add/edit).\r\n */\r\nconst showFormNoReset = mode => ({\r\n    type: types.SHOW_FORM,\r\n    mode\r\n});\r\n\r\nexport const showForm = mode => (dispatch, getState) => {\r\n    dispatch(resetError());\r\n    dispatch(showFormNoReset(mode));\r\n}\r\n\r\n/**\r\n * TOGGLE_FORM action creator.\r\n */\r\nconst toggleFormNoReset = () => ({\r\n    type: types.TOGGLE_FORM\r\n});\r\n\r\nexport const toggleForm = () => (dispatch, getState) => {\r\n    dispatch(resetError());\r\n    dispatch(toggleFormNoReset());\r\n}\r\n\r\nexport const toggleDeleteConfirm = id => ({\r\n    type: types.TOGGLE_DELETE_CONFIRM,\r\n    id\r\n});\r\n\r\nexport const showError = message => ({\r\n    type: types.SHOW_ERROR,\r\n    message\r\n});\r\n\r\nexport const resetError = () => ({\r\n    type: types.RESET_ERROR\r\n});","import React, { Component } from 'react';\r\nimport { CardFooter, Card, CardText, CardBody, CardLink, CardTitle, CardSubtitle } from 'reactstrap';\r\n\r\nimport * as strings from '../constants/Strings';\r\n\r\nclass Movie extends Component {\r\n    handleEditClick = () => {\r\n        const { selectForEdit, showForm, movie: { id } } = this.props;\r\n        selectForEdit(id);\r\n        showForm(strings.FORM_MODES.EDIT);\r\n    };\r\n\r\n    render() {\r\n        const { id, title, year, runtime, genre, director } = this.props.movie;\r\n        return (\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle>{title}</CardTitle>\r\n                    <CardSubtitle>{year}</CardSubtitle>\r\n                    <CardText>\r\n                        Director: {director}<br />\r\n                        Genre: {genre}<br />\r\n                        Runtime: {runtime}\r\n                    </CardText>\r\n                </CardBody>\r\n                <CardFooter>\r\n                    <CardLink href=\"#\" onClick={this.handleEditClick}>{strings.EDIT_BUTTON}</CardLink>\r\n                    <CardLink href=\"#\" onClick={() => this.props.toggleDeleteConfirm(id)}>{strings.DELETE_BUTTON}</CardLink>\r\n                </CardFooter>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport { Alert } from 'reactstrap';\r\n\r\nconst AlertMessage = ({ color, message }) => {\r\n    return (\r\n        <Alert color={color} className='alert-message'>\r\n            {message}\r\n        </Alert>\r\n    )\r\n};\r\n\r\nexport default AlertMessage;","import React, { Component } from 'react';\r\nimport { CardColumns } from 'reactstrap';\r\n\r\nimport { COLORS, ALERT_NO_MOVIES } from '../constants/Strings';\r\n\r\nimport Movie from './Movie';\r\nimport AlertMessage from './AlertMessage';\r\n\r\nclass Movies extends Component {\r\n    render() {\r\n        return (\r\n            this.props.movies.length ?\r\n                <CardColumns>\r\n                    {this.props.movies.map(m => (\r\n                        <Movie\r\n                            key={m.id}\r\n                            movie={m}\r\n                            toggleDeleteConfirm={this.props.toggleDeleteConfirm}\r\n                            selectForEdit={this.props.selectForEdit}\r\n                            showForm={this.props.showForm}\r\n                        />\r\n                    ))}\r\n                </CardColumns>\r\n                :\r\n                <AlertMessage message={ALERT_NO_MOVIES} color={COLORS.INFO} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movies;","import React from 'react'\r\nimport loader from '../images/loader.svg';\r\nconst Loader = () => {\r\n    return (\r\n        <div className='loader'>\r\n            <img alt='loader' src={loader} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, Row } from 'reactstrap';\r\n\r\nimport * as strings from '../constants/Strings';\r\n\r\nclass DeleteConfirmation extends Component {\r\n    handleDelete = () => {\r\n        this.props.deleteMovie(this.props.selectedId);\r\n        this.props.toggle();\r\n    };\r\n\r\n    render() {\r\n        const { isOpen, toggle, selectedTitle } = this.props;\r\n        return (\r\n            <Modal isOpen={isOpen} toggle={() => toggle()}>\r\n                <ModalHeader toggle={() => toggle()}>{selectedTitle}</ModalHeader>\r\n                <ModalBody>\r\n                    {strings.DELETE_CONFIRMATION_BODY}\r\n                    <Row form>\r\n                        <Button color={strings.COLORS.INFO} type=\"button\" onClick={this.handleDelete}>{strings.DELETE_BUTTON}</Button>\r\n                        <Button outline color={strings.COLORS.SECONDARY} type=\"button\" onClick={() => toggle()}>{strings.CANCEL_BUTTON}</Button>\r\n                    </Row>\r\n                </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeleteConfirmation;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { toggleDeleteConfirm, deleteMovie } from '../actions';\r\nimport DeleteConfirmation from '../components/DeleteConfirmation';\r\n\r\nclass DeleteConfirmContainer extends Component {\r\n    render() {\r\n        return (\r\n            <DeleteConfirmation\r\n                isOpen={this.props.isOpen}\r\n                toggle={this.props.toggleDeleteConfirm}\r\n                selectedId={this.props.selectedId}\r\n                deleteMovie={this.props.deleteMovie}\r\n                selectedTitle={this.props.selectedTitle}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapState = state => {\r\n    const { deleteConfirmation, movies: { selectedId, selectedTitle } } = state;\r\n    return {\r\n        isOpen: deleteConfirmation.isOpen,\r\n        selectedId,\r\n        selectedTitle\r\n    };\r\n};\r\n\r\nconst mapActions = {\r\n    toggleDeleteConfirm,\r\n    deleteMovie\r\n};\r\n\r\nexport default connect(mapState, mapActions)(DeleteConfirmContainer);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { toggleDeleteConfirm, selectForEdit, showForm } from '../actions';\r\n\r\nimport Movies from '../components/Movies';\r\nimport Loader from '../components/Loader';\r\nimport DeleteConfirmContainer from './DeleteConfirmContainer';\r\n\r\nclass MoviesContainer extends Component {\r\n    render() {\r\n        return (\r\n            this.props.isFetching ?\r\n                <Loader />\r\n                :\r\n                <div>\r\n                    <DeleteConfirmContainer />\r\n                    <Movies\r\n                        movies={this.props.movies}\r\n                        toggleDeleteConfirm={this.props.toggleDeleteConfirm}\r\n                        selectForEdit={this.props.selectForEdit}\r\n                        showForm={this.props.showForm}\r\n                    />\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapState = state => {\r\n    const { movies: { items, isFetching } } = state;\r\n    return {\r\n        movies: items,\r\n        isFetching\r\n    };\r\n};\r\n\r\nconst mapActions = {\r\n    toggleDeleteConfirm,\r\n    selectForEdit,\r\n    showForm\r\n};\r\n\r\nexport default connect(mapState, mapActions)(MoviesContainer);","import React from 'react';\r\nimport { Button, FormGroup, Label, Row } from 'reactstrap';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport * as strings from '../constants/Strings';\r\nimport AlertMessage from './AlertMessage';\r\n\r\nconst MovieSchema = yup.object().shape({\r\n    title: yup\r\n        .string()\r\n        .required(strings.VALIDATION.REQUIRED),\r\n    year: yup\r\n        .number()\r\n        .required(strings.VALIDATION.REQUIRED)\r\n        .min(1800, strings.VALIDATION.YEAR)\r\n        .max(9999, strings.VALIDATION.YEAR)\r\n        .integer(),\r\n    director: yup\r\n        .string()\r\n        .required(strings.VALIDATION.REQUIRED),\r\n    genre: yup\r\n        .string()\r\n        .required(strings.VALIDATION.REQUIRED),\r\n    runtime: yup\r\n        .string()\r\n        .required(strings.VALIDATION.REQUIRED)\r\n});\r\n\r\nconst MovieForm = ({ movieToEdit, updateMovie, addMovie, toggle, buttonLabel, errorMessage }) =>\r\n    <Formik\r\n        initialValues={{\r\n            title: movieToEdit ? movieToEdit.title : '',\r\n            year: movieToEdit ? movieToEdit.year : '',\r\n            director: movieToEdit ? movieToEdit.director : '',\r\n            genre: movieToEdit ? movieToEdit.genre : '',\r\n            runtime: movieToEdit ? movieToEdit.runtime : ''\r\n        }}\r\n        validationSchema={MovieSchema}\r\n        onSubmit={values => {\r\n            if (movieToEdit) {\r\n                updateMovie(values, movieToEdit.id);\r\n            }\r\n            else {\r\n                addMovie(values);\r\n            }\r\n        }}\r\n    >\r\n        {({ errors, touched }) => (\r\n            <Form>\r\n                <FormGroup>\r\n                    <Label for=\"title\">{strings.FORM_LABEL_TITLE}</Label>\r\n                    <Field name=\"title\" id=\"title\" placeholder={strings.FORM_LABEL_TITLE} className=\"form-control\" type='text' />\r\n                    {errors.title && <div className='validation-error'>{errors.title}</div>}\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"year\">{strings.FORM_LABEL_YEAR}</Label>\r\n                    <Field name=\"year\" id=\"year\" placeholder={strings.FORM_LABEL_YEAR} className=\"form-control\" type='number' />\r\n                    {errors.year && <div className='validation-error'>{errors.year}</div>}\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"director\">{strings.FORM_LABEL_DIRECTOR}</Label>\r\n                    <Field name=\"director\" id=\"director\" placeholder={strings.FORM_LABEL_DIRECTOR} className=\"form-control\" type='text' />\r\n                    {errors.director && <div className='validation-error'>{errors.director}</div>}\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"genre\">{strings.FORM_LABEL_GENRE}</Label>\r\n                    <Field name=\"genre\" id=\"genre\" placeholder={strings.FORM_LABEL_GENRE} className=\"form-control\" type='text' />\r\n                    {errors.genre && <div className='validation-error'>{errors.genre}</div>}\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"runtime\">{strings.FORM_LABEL_RUNTIME}</Label>\r\n                    <Field name=\"runtime\" id=\"runtime\" placeholder={strings.FORM_LABEL_RUNTIME} className=\"form-control\" type='text' />\r\n                    {errors.runtime && <div className='validation-error'>{errors.runtime}</div>}\r\n                </FormGroup>\r\n\r\n                <Button color={strings.COLORS.INFO} type=\"submit\">{buttonLabel}</Button>\r\n                <Button outline color={strings.COLORS.SECONDARY} type=\"button\" onClick={toggle}>{strings.CANCEL_BUTTON}</Button>\r\n\r\n                {errorMessage &&\r\n                    <Row form>\r\n                        <AlertMessage message={errorMessage} color={strings.COLORS.DANGER} />\r\n                    </Row>}\r\n            </Form>\r\n        )}\r\n    </Formik>;\r\n\r\nexport default MovieForm;","import React, { Component } from 'react';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\n\r\nimport MovieForm from './MovieForm';\r\n\r\nclass MovieFormWrapper extends Component {\r\n    render() {\r\n        const { isOpen, toggle, title, submitAction, addMovie, updateMovie, movieToEdit, buttonLabel,errorMessage } = this.props;\r\n        return (\r\n            <Modal isOpen={isOpen} toggle={toggle}>\r\n                <ModalHeader toggle={toggle}>{title}</ModalHeader>\r\n                <ModalBody>\r\n                    <MovieForm\r\n                        submitAction={submitAction}\r\n                        toggle={toggle}\r\n                        addMovie={addMovie}\r\n                        updateMovie={updateMovie}\r\n                        movieToEdit={movieToEdit}\r\n                        buttonLabel={buttonLabel}\r\n                        errorMessage={errorMessage}\r\n                    />\r\n                </ModalBody>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieFormWrapper;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as strings from '../constants/Strings';\r\nimport { toggleForm, addMovieUnique, updateMovieUnique } from '../actions';\r\n\r\nimport MovieFormWrapper from '../components/MovieFormWrapper';\r\n\r\nclass MovieFormContainer extends Component {\r\n    render() {\r\n        return (\r\n            <MovieFormWrapper\r\n                isOpen={this.props.isOpen}\r\n                title={this.props.title}\r\n                toggle={this.props.toggleForm}\r\n                updateMovie={this.props.updateMovie}\r\n                addMovie={this.props.addMovie}\r\n                movieToEdit={this.props.movieToEdit}\r\n                buttonLabel={this.props.buttonLabel}\r\n                errorMessage={this.props.errorMessage}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapState = state => {\r\n    const { form, movies: { items, selectedId }, errorMessage } = state;\r\n    const propsObj = { isOpen: form.isOpen, errorMessage };\r\n    if (form.mode === strings.FORM_MODES.EDIT) {\r\n        propsObj.title = strings.EDIT_MOVIE_TITLE;\r\n        propsObj.buttonLabel = strings.SUBMIT_UPDATE_BUTTON;\r\n        propsObj.movieToEdit = items.find(i => i.id === selectedId);\r\n    }\r\n    else {\r\n        propsObj.title = strings.ADD_MOVIE_TITLE;\r\n        propsObj.buttonLabel = strings.SUBMIT_ADD_BUTTON;\r\n    }\r\n    return propsObj;\r\n};\r\n\r\nconst mapActions = {\r\n    toggleForm,\r\n    updateMovie: updateMovieUnique,\r\n    addMovie: addMovieUnique\r\n};\r\n\r\nexport default connect(mapState, mapActions)(MovieFormContainer);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Container, Row } from 'reactstrap';\r\n\r\nimport { showForm } from '../actions';\r\nimport * as strings from '../constants/Strings';\r\n\r\nimport MoviesContainer from './MoviesContainer';\r\nimport MovieFormContainer from './MovieFormContainer';\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <h1 className=\"display-4\"><span role=\"img\" aria-label=\"cinema\">🎬</span> {strings.APP_TITLE}</h1>\r\n                </Row>\r\n                <Row>\r\n                    <Button color={strings.COLORS.INFO} onClick={() => this.props.showForm(strings.FORM_MODES.ADD)}>{strings.ADD_BUTTON}</Button>\r\n                </Row>\r\n                <Row>\r\n                    <MoviesContainer />\r\n                    <MovieFormContainer />\r\n                </Row>\r\n                <Row className='footer'>\r\n                    <div className='text-center'>\r\n                        <p><a href='https://github.com/amaliaman/herolo-cinema' target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a></p>\r\n                        <small className=\"text-muted\">\r\n                            Background image <a href='https://www.freepik.com/free-photo/creative-arrangement-of-popcorn-and-clapper_2303387.htm' target=\"_blank\" rel=\"noopener noreferrer\">Designed by Freepik</a>\r\n                        </small>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapActions = {\r\n    showForm\r\n};\r\n\r\nexport default connect(null, mapActions)(Home);","import React, { Component } from 'react';\r\n\r\nimport Home from './Home';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Home />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nimport reducer from './reducers';\r\nimport { fetchMovies } from './actions';\r\nimport App from './containers/App'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\nconst middleware = [thunk];\r\nif (process.env.NODE_ENV !== 'production') {\r\n    middleware.push(createLogger());\r\n};\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    applyMiddleware(...middleware)\r\n);\r\n\r\nstore.dispatch(fetchMovies());\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}